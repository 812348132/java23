<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.crm.mapper.CustomerMapper">

    <insert id="saveCustomer">
      insert into customer (id, cust_name, job_title,
      mobile, address, trade,
      source, level, mark,
      account_id, last_contact_time, create_time,
      update_time, reminder, sex)
      values (#{id},#{custName}, #{jobTitle},
      #{mobile}, #{address}, #{trade},
      #{source}, #{level}, #{mark},
      #{accountId}, #{lastContactTime}, #{createTime},
      #{updateTime}, #{reminder}, #{sex}
      )
    </insert>

  <select id="findMyCustomerByParams" resultType="Customer">
        SELECT
	    *
        FROM
            customer
        WHERE
        <choose>
            <when test="accountId != null">
                account_id = #{accountId}
            </when>
            <otherwise>
                account_id is null
            </otherwise>
        </choose>
        <if test="keyword != null and keyword !=''">
        AND (cust_name like concat("%",#{keyword},"%")  OR mobile like concat("%",#{keyword},"%"))
        </if>
        ORDER BY id,update_time DESC
  </select>
    
    <select id="findCustomerById" resultType="Customer">
        SELECT * FROM customer WHERE id = #{id}
    </select>
    
    <update id="updateCustomer">
              update
                customer
              SET
                cust_name = #{custName},
                job_title = #{jobTitle},
                mobile = #{mobile},
                address = #{address},
                trade = #{trade,jdbcType=VARCHAR},
                source = #{source},
                level = #{level},
                mark = #{mark},
                account_id = #{accountId},
                last_contact_time = #{lastContactTime},
                create_time = #{createTime},
                update_time = #{updateTime},
                reminder = #{reminder},
                sex = #{sex}
            WHERE id = #{id}
    </update>

    <delete id="delCustomerById">
        DELETE FROM customer WHERE id = #{id}
    </delete>

    <select id="findCustomerByAccountId" resultType="Customer">
        SELECT * FROM customer WHERE
        <choose>
          <when test="accountId != null">
              account_id = #{accountId}
          </when>
          <otherwise>
              account_id is null
          </otherwise>
       </choose>
    </select>
    
    <select id="findAllCustomer" resultType="Customer">
        SELECT * FROM customer
    </select>

    <select id="findCostomerLevelCount" resultType="java.util.Map">
        select level,count(*) as num from customer GROUP BY level
    </select>
</mapper>